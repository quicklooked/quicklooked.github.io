{"version":3,"sources":["../node_modules/gel-grid/lib/_tools.scss","../node_modules/gel-grid/lib/_settings.scss","../node_modules/gel-sass-tools/lib/settings/_globals.scss","../node_modules/sass-mq/_mq.scss","../node_modules/gel-sass-tools/lib/tools/_math.scss","style/blame/_orbit.scss","../node_modules/gel-sass-tools/lib/tools/_rem.scss","style/blame/_radio.scss","style/_search-suggest.scss","style/_vars.scss","style/_common.scss","style/components/_searchbox.scss","style/_mixins.scss","style/components/_search-suggestions.scss","../node_modules/gel-typography/lib/_settings.scss","../node_modules/gel-typography/lib/_tools.scss","style/components/_episode-suggestions.scss","style/components/_episode-suggestion.scss","style/components/_episode-image.scss","style/components/_view-all-button.scss","style/components/_search-suggestion.scss","style/components/_episode-suggestion--no-touch.scss","style/themes/_iplayer.scss","style/themes/_sounds.scss"],"names":[],"mappings":"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AkBlF,kBFnC0B,CEwC1B,kBAvBkF,CHiLlF,yBSzMN,2CZ0FM,oBAAqB,CACrB,gBEpFc,CFsFd,eAAgB,CA4NvB,eAb0B,CA5Lf,kBAAmB,CY5G5B,CTqMK,iDSzMN,2CZgGU,iBIzFsB,CQH/B,CJVH,uCG2BI,aAAc,CLqBV,iBFnC0B,CEwC1B,mBAvBkF,CE9B1F,8CG+BM,UAAW,CLiBT,WKhByB,CLqBzB,cAvBkF,CKGpF,YAAa,CACb,oBAAkB,CAAlB,iBAAkB,CAClB,WAAY,CACZ,eAAgB,CAChB,aF1CwB,CE2CxB,uBAAwB,CACxB,qBF3CuB,CE4CvB,eAAgB,CAChB,mBAAoB,CLOlB,uBJnCc,CIwCd,+BAvBkF,CHiLlF,2BK/MR,8CFgDQ,iBFnC0B,CEwC1B,iBAvBkF,CKgBlF,aAAc,CAEjB,CHhDL,yDGmDM,YAAa,CACb,OAAQ,CACR,QAAS,CHrDf,+EG2DI,sEAAuF,CACvF,oBF3EsB,CH+DlB,0BKasC,CLRtC,0BKQsC,CLbtC,UGjEkB,CHsElB,aAvBkF,CAkBlF,WGjEkB,CHsElB,cAvBkF,CKkCtF,iBAAkB,CAClB,KAAM,CACN,SAAU,CACV,cAAe,CACf,WAAY,CACZ,eAAgB,CAChB,mBAAoB,CHtExB,wCFgDQ,UK0B0C,CLrB1C,cAvBkF,CE9B1F,uCG8EI,OAAQ,CACR,8CAA+C,CAC/C,qBF5FkB,CE6FlB,WAAY,CHjFhB,gDGoFM,SAAU,CHpFhB,4CFgDQ,gBK2C0B,CLtC1B,kBAvBkF,CHiLlF,yBK/MR,4CG8FI,aAAc,CAEjB,CHhGD,yCRgGQ,oBAAqB,CACrB,gBEpFc,CFsFd,eAAgB,CAQZ,UAAW,CAWX,kBAAmB,CMtEvB,kBO/D4B,CPoE5B,qBAvBkF,CHiLlF,2BK/MR,yCRsGY,iBIzFsB,CSajC,CVqLO,yBK/MR,yCRgGQ,oBAAqB,CACrB,gBEpFc,CFsFd,eAAgB,CA4NvB,eAb0B,CA5Lf,kBAAmB,CMtEvB,mBO3DkD,CPgElD,qBAvBkF,COJzF,CVqLO,iDK/MR,yCRsGY,iBIzFsB,CSajC,CVqLO,yBSzMN,oDZ0FM,oBAAqB,CACrB,gBEpFc,CFsFd,eAAgB,CA4NvB,eAb0B,CA5Lf,kBAAmB,Ca5H3B,qBJyCyB,CGzB1B,CTqMK,iDSzMN,oDZgGU,iBIzFsB,CQH/B,CJVH,0EKFI,YAAa,CLEjB,sDKEI,YAAa,CV6MT,yBK/MR,sDKOM,oBAAqB,CLP3B,0EKWM,aAAc,CACd,QAAS,CACT,+BJD4B,CIE5B,aJL6B,CIM7B,kBAAmB,CPiCjB,cQyHmB,CRpHnB,kBAvBkF,CAkBlF,gBQ0HqB,CRrHrB,mBAvBkF,CAkBlF,sBJnCc,CIwCd,4BAvBkF,CONrF,CVuLG,+CK/MR,0EFgDQ,cQ6HmB,CRxHnB,cAvBkF,CAkBlF,gBQ8HqB,CRzHrB,mBAvBkF,CONrF,CVuLG,iDK/MR,0EFgDQ,cQiImB,CR5HnB,kBAvBkF,CAkBlF,gBQkIqB,CR7HrB,oBAvBkF,CS0D9E,uFTxCJ,cQqImB,CRhInB,cAvBkF,CAkBlF,gBQsIqB,CRjIrB,mBAvBkF,CS4D7E,CZqHL,iDK/MR,0EFgDQ,gBO3BgC,CPgChC,kBAvBkF,CAkBlF,iBFnC0B,CEwC1B,iBAvBkF,CONrF,CVuLG,yBK/MR,8DRgGQ,oBAAqB,CACrB,gBEpFc,CFsFd,eAAgB,CAQZ,UAAW,CAWX,kBAAmB,Ca5E5B,CVqKK,iDK/MR,8DRsGY,iBIzFsB,CS6B/B,CVqKK,yBSzMN,yEZ0FM,oBAAqB,CACrB,gBEpFc,CFsFd,eAAgB,CA4NvB,eAb0B,CA5Lf,kBAAmB,CalFzB,qBJDuB,CGzB1B,CTqMK,iDSzMN,yEZgGU,iBIzFsB,CQH/B,CJVH,+FKwCM,YAAa,CLxCnB,0CRgGQ,oBAAqB,CACrB,gBEpFc,CFsFd,eAAgB,CAQZ,UAAW,CAWX,kBAAmB,CMtEvB,mBU/DgD,CVoEhD,mBAvBkF,CHiLlF,2BK/MR,0CRsGY,iBIzFsB,CYMjC,CRnBD,2EQZI,QAAS,CACT,+BPuB8B,COtB9B,aPmB+B,COlB/B,kBAAmB,CVyDf,cQyHmB,CRpHnB,kBAvBkF,CAkBlF,gBQ0HqB,CRrHrB,mBAvBkF,CAkBlF,mBJnCc,CIwCd,uBAvBkF,CAkBlF,iBUpD6B,CVyD7B,mBAvBkF,CHiLlF,yBK/MR,2EFgDQ,cQ6HmB,CRxHnB,cAvBkF,CAkBlF,gBQ8HqB,CRzHrB,mBAvBkF,CUjCvF,CbkNK,2BK/MR,2EFgDQ,cQiImB,CR5HnB,kBAvBkF,CAkBlF,gBQkIqB,CR7HrB,oBAvBkF,CS0D9E,wFTxCJ,cQqImB,CRhInB,cAvBkF,CAkBlF,gBQsIqB,CRjIrB,mBAvBkF,CS4D7E,CZqHL,2BK/MR,2EFgDQ,eU/C6B,CVoD7B,kBAvBkF,CAkBlF,iBFnC0B,CEwC1B,iBAvBkF,CU3BrF,Cb4MG,yBK/MR,0CRgGQ,oBAAqB,CACrB,gBEpFc,CFsFd,eAAgB,CA4NvB,eAb0B,CA5Lf,kBAAmB,CgBnG9B,Cb4LO,iDK/MR,0CRsGY,iBIzFsB,CYMjC,Cb4LO,yBK/MR,2EFgDQ,gBUtC8B,CV2C9B,kBAvBkF,CAkBlF,gBJnCc,CIwCd,kBAvBkF,CUlBpF,QAAS,CACV,CbkMG,yBSzMN,qDZ0FM,oBAAqB,CACrB,gBEpFc,CFsFd,eAAgB,CA4NvB,SAb0B,CA5Lf,kBAAmB,CY5G5B,CTqMK,iDSzMN,qDZgGU,iBIzFsB,CQH/B,CJVH,yCShBE,oBAAqB,CACrB,aAAc,CACd,iBAAkB,CAClB,eAAgB,CX6DV,gBW3D+C,CXgE/C,kBAvBkF,CAkBlF,mBW1DkD,CX+DlD,qBAvBkF,CAkBlF,gBJnCc,CIwCd,kBAvBkF,CWtCxF,eAAgB,CTQlB,2CSLI,iBAAkB,CAClB,KAAM,CACN,QAAS,CACT,MAAO,CACP,OAAQ,CACR,aAAc,CACd,eAAgB,CAChB,kBAAmB,CTFvB,gDSMI,QAAS,CACT,SAAU,CXyCN,cQyHmB,CRpHnB,kBAvBkF,CAkBlF,gBQ0HqB,CRrHrB,mBAvBkF,CWrBtF,kBAAmB,CACnB,aRMuC,CQLvC,gBAAiB,CdoMb,yBK/MR,gDFgDQ,cQ6HmB,CRxHnB,cAvBkF,CAkBlF,gBQ8HqB,CRzHrB,mBAvBkF,CWlBvF,CdmMK,2BK/MR,gDFgDQ,cQiImB,CR5HnB,kBAvBkF,CAkBlF,gBQkIqB,CR7HrB,oBAvBkF,CS0D9E,6DTxCJ,cQqImB,CRhInB,cAvBkF,CAkBlF,gBQsIqB,CRjIrB,mBAvBkF,CS4D7E,CP1Fb,mDSeI,QAAS,CACT,SAAU,CXgCN,cQgJmB,CR3InB,kBAvBkF,CAkBlF,gBQiJqB,CR5IrB,oBAvBkF,CWZtF,aRC0C,CN4LtC,2BK/MR,mDFgDQ,gBQoJqB,CR/IrB,mBAvBkF,CS0D9E,gETxCJ,cQuJmB,CRlJnB,iBAvBkF,CAkBlF,gBQwJqB,CRnJrB,oBAvBkF,CS4D7E,CP1Fb,8CSsBI,iBAAkB,CAClB,OfVkB,CeWlB,WAAY,CACZ,MAAO,CACP,URgBe,CQff,WRee,CNqKX,2BK/MR,yCFgDQ,eJnCc,CIwCd,iBAvBkF,CAkBlF,kBJnCc,CIwCd,oBAvBkF,CAkBlF,iBFnC0B,CEwC1B,iBAvBkF,CE9B1F,uDFgDQ,eJnCc,CIwCd,iBAvBkF,CWOpF,YAAa,CTrCnB,8CFgDQ,SFnC0B,CEwC1B,SAvBkF,CWYpF,QAAS,CACT,QAAS,CACV,CdmKG,yBK/MR,yCFgDQ,gBJnCc,CIwCd,kBAvBkF,CWmBtF,YAAa,CAEhB,CTnDD,kCSuDI,8EAA+E,CAC/E,oBAAqB,CACrB,iCAAkC,CAClC,URjCyB,CDzB7B,kCS8DI,UAA0B,CAC1B,sFAAuF,CACvF,oBAAqB,CACrB,iCAAkC,CAClC,URzCyB,CNsLrB,2BK/MR,oESwEM,qBRhDuB,CQiDxB,CTzEL,oCS8EE,iBAAkB,CAClB,iBAAkB,CT/EpB,sCSmFE,UAAW,CACX,gBR1CiB,CHMX,iBFnC0B,CEwC1B,iBAvBkF,CHiLlF,2BK/MR,sCSwFI,SAAU,CACV,aAAc,CAUjB,Cd4GO,yBK/MR,sCS6FI,YAAa,CAMhB,Cd4GO,yBSzMN,iDK2FE,YAAa,CLvFd,CJVH,oCUhBE,YAAa,CACb,UAAW,CACX,iBAAkB,CVcpB,wCUXI,kBTyCwB,CSxCxB,QAAS,CACT,qBAAsB,CVS1B,4FULM,cAAe,CACf,WAAY,CACZ,WAAY,CfkNV,2BK/MR,oCUEI,aAAc,CACd,SAAU,CZ6CN,iBY5CgD,CZiDhD,iBAvBkF,CYfzF,CfgMO,yBK/MR,oCFgDQ,iBYxCgD,CZ6ChD,iBAvBkF,CYrBtF,YAAa,CAMhB,CfgMO,yBSzMN,+CMOE,YAAa,CNHd,CJVH,2CRgGQ,oBAAqB,CACrB,gBEpFc,CFsFd,eAAgB,CAQZ,UAAW,CAWX,kBAAmB,CGyFvB,2BK/MR,2CRsGY,iBIzFsB,CevBjC,ChByNO,yBSzMN,sDZ0FM,oBAAqB,CACrB,gBEpFc,CFsFd,eAAgB,CA4NvB,eAb0B,CA5Lf,kBAAmB,CmBlI3B,qBV+CyB,CGzB1B,CTqMK,iDSzMN,sDZgGU,iBIzFsB,CQH/B,CJVH,mCWPE,cAAe,CACf,WAAY,CACZ,eAAgB,CAChB,wBVyC+B,CGnB/B,qCOrB+C,CAC/C,UV0CkC,CHQ5B,WGT0B,CHc1B,WAvBkF,CAkBlF,kBahD+C,CbqD/C,oBAvBkF,CAkBlF,cQkKmB,CR7JnB,iBAvBkF,CAkBlF,gBQmKqB,CR9JrB,gBAvBkF,CAkBlF,iBa9C8C,CbmD9C,iBAvBkF,CAkBlF,kBa7C+C,CbkD/C,kBAvBkF,Ca1BxF,gBAAiB,Cb4CX,eJnCc,CIwCd,iBAvBkF,CHiLlF,yBK/MR,mCFgDQ,gBQsKqB,CRjKrB,oBAvBkF,CaXzF,ChB4LO,2BYvHI,gDTxCJ,cQyKmB,CRpKnB,kBAvBkF,CAkBlF,gBQ0KqB,CRrKrB,gBAvBkF,CS4D7E,CZqHL,2BK/MR,mCFgDQ,gBavC+C,Cb4C/C,gBAvBkF,CaXzF,CXnBD,yCWaI,wBVyBoC,CDtCxC,yCWiBI,wBVqBoC,CUpBrC,iFb8BK,cQyHmB,CRpHnB,kBAvBkF,CAkBlF,gBQ0HqB,CRrHrB,mBAvBkF,CAkBlF,qBGzCwC,CH8CxC,+BAvBkF,CcxCtF,aXS4B,CWR5B,aAAc,CACd,oBAAqB,CACrB,oBAAqB,CjBsNjB,yBiB9NR,iFd+DQ,cQ6HmB,CRxHnB,cAvBkF,CAkBlF,gBQ8HqB,CRzHrB,mBAvBkF,CcfvF,CjBgMK,2BiB9NR,iFd+DQ,cQiImB,CR5HnB,kBAvBkF,CAkBlF,gBQkIqB,CR7HrB,oBAvBkF,CS0D9E,2GTxCJ,cQqImB,CRhInB,cAvBkF,CAkBlF,gBQsIqB,CRjIrB,mBAvBkF,CS4D7E,CZqHL,2BiB9NR,iFd+DQ,qBcpDiD,CdyDjD,6BAvBkF,CAkBlF,iBcnDkD,CdwDlD,iBAvBkF,CAkBlF,kBclDmD,CduDnD,kBAvBkF,CcfvF,CA9BH,6FAiBM,wBXAkC,CWClC,aXCoC,CWApC,SAAU,CAnBhB,iRAyBM,iBAAkB,CAClB,4BAA6B,CAC7B,aAAc,CACd,gBAAiB,CA5BvB,wCAiCI,QAAS,CACV,4DAID,wBXrBsC,CWsBtC,aXpBwC,CWqBzC,oFCtCC,wBZesC,CYdtC,SAAU,CAHZ,gJAMI,aZasC,CYZvC,kGCDC,wBbuDkC,Ca9DtC,sKAUM,wBbFwB,CaR9B,oQAiBI,wBbT0B,CaR9B,sGAqBI,UbY+C,CajCnD,sPA2BM,UbXkC,CaYnC,gRASH,4BAA6B,CAC7B,abjBgD,CakBjD,wCAKG,YAAa,CAFjB,4CAMI,YAAa,CANjB,yChBsBQ,mBgBZqD,ChBiBrD,sBAvBkF,CgBOvF,8CAOG,2EAA4F,CAC5F,oBb5DoB,CH+DlB,0BgBFwC,ChBOxC,0BgBPwC,CALhD,iKAYM,+BbxC0C,CayC1C,ab5C2C,Ca+BjD,yDAkBI,UbvCyD,CaqB7D,wCAuBM,sFAAuF,CACvF,oBAAqB,CACrB,iCAAkC,CnB6IhC,2BmBtKR,wCA+BM,kFAAuG,CACvG,oBAAqB,CACrB,iCAAkC,CACnC,CAKL,sHAEE,ab7EgD,Ca8EhD,wBAAyB,CAC1B,wPAMC,qBbvF8C,CamFhD,gXAOI,abxF8C,CayF/C,sHCzGG,qBdIuB,CcT7B,uCAUM,6EAA8F,CAC9F,oBdVoB,CH+DlB,0BiBpDwC,CjByDxC,0BiBzDwC,CAZhD,mJAmBM,+BdWmC,CcVnC,adOoC,Cc3B1C,+EA2BM,UdViC,CcjBvC,gIAgCM,4BAA6B,CAC7B,adX2C,CctBjD,yCAsCM,4BAA6B,CAtCnC,+CAyCM,wBdH6C,CctCnD,+CA+CM,Udb4C,CclClD,kDAmDM,add+C,CcrCrD,wDAuDM,+EAAgF,CAChF,oBAAqB,CACrB,iCAAkC,CAzDxC,wJA+DU,adzCuC,CNyMzC,2BoB/NR,wDAsEM,2EAA0F,CAC1F,oBAAqB,CACrB,iCAAkC,CACjC","file":"enhanced.css","sourcesContent":["///*------------------------------------*\\\n//    # GEL GRID - TOOLS\n//\\*------------------------------------*/\n\n// Grid container, used to wrap all grid elements and apply the correct maximum widths\n//\n// 1. IE8 doesn't apply border-box box-sizing logic correctly on (min|max)-(width|height) properties.\n//    As we serve IE8 a none responsive layout, lets just use the `width` property\n//\n// @author Shaun Bent\n//\n@mixin gel-wrap() {\n    @if $core {\n        max-width: $gel-grid-max-width-1008;\n        margin: 0 auto;\n        padding-right: $gel-spacing-unit;\n        padding-left: $gel-spacing-unit;\n\n        @if $fixed {\n            width: #{$gel-grid-max-width-1008}; // [1]\n        }\n    }\n\n    @if $enhanced {\n        @include mq($from: $gel-grid-margin-change) {\n            padding-left: double($gel-spacing-unit);\n            padding-right: double($gel-spacing-unit);\n        }\n\n        @if $gel-grid-enable--1280-breakpoint {\n            @if $gel-grid-1280-toggle-class != null {\n                .#{$gel-grid-1280-toggle-class} & {\n                    @include gel-wrap-1280-breakpoint;\n                }\n            } @else {\n                @include gel-wrap-1280-breakpoint;\n            }\n        }\n    }\n}\n\n\n@mixin gel-wrap-1280-breakpoint() {\n    @include mq($from: $gel-grid-max-width-1280) {\n        max-width: $gel-grid-max-width-1280;\n\n        @if $fixed {\n            width: #{$gel-grid-max-width-1280}; // [1]\n        }\n    }\n}\n\n\n// A single layout group/row, this wraps individual layout items\n//\n// 1. Remove any margin and padding which may effect our layout\n// 2. Remove any default list styling if the layout is applied to a list\n//\n// @param {String} $align - either 'left', 'center', 'right'\n//\n// @author Shaun Bent\n//\n@mixin gel-layout($align: 'left') {\n    @if $enhanced {\n        margin-right: 0; // [1]\n        margin-left: -$gel-spacing-unit;\n        padding-right: 0; // [1]\n        padding-left: 0; // [1]\n\n        list-style: none; // [2]\n\n        @include mq($from: $gel-grid-gutter-change) {\n            margin-left: double(-$gel-spacing-unit);\n        }\n\n        // output horizontal alignment\n        @if ($align != 'left') {\n            text-align: #{$align};\n        } @else {\n            text-align: left;\n        }\n\n        @if $gel-grid-enable--whitespace-fix {\n            letter-spacing: -0.31em;\n            text-rendering: optimizespeed;\n\n            @at-root {\n                // Opera as of 12 on Windows needs word-spacing.\n                .opera-only :-o-prefocus,\n                #{&} {\n                    word-spacing: -0.43em;\n                }\n            }\n\n        }\n    }\n}\n\n\n// A single layout group/row, this wraps individual layout items\n//\n// 1. Cause columns to stack side-by-side\n// 2. Space columns apart\n// 3. Ensure all text is aligned correctly\n// 4. Align columns to the tops of each other\n//\n// @param {String} $width - either '100%', 'auto', or a fraction (e.g. '1/4')\n// @param {String} $align - either 'left', 'center', 'right'\n//\n// @author  Shaun Bent\n//\n@mixin gel-layout-item($width: '100%', $align: 'top') {\n    @if $enhanced {\n        display: inline-block; // [1]\n        padding-left: $gel-spacing-unit; // [2]\n\n        text-align: left; // [3]\n\n        @include mq($from: $gel-grid-gutter-change) {\n            padding-left: double($gel-spacing-unit); // [2]\n        }\n\n        // output the required width\n        @if ($width == '100%') {\n            width: 100%;\n        } @else if ($width == 'auto') {\n            width: auto;\n        } @else {\n            @include gel-columns($width);\n        }\n\n        // output vertical alignment\n        @if ($align != 'top') {\n            vertical-align: #{$align};\n        } @else {\n            vertical-align: top; // [4]\n        }\n\n        @if $gel-grid-enable--box-sizing {\n            -webkit-box-sizing: border-box;\n               -moz-box-sizing: border-box;\n                    box-sizing: border-box;\n        }\n\n        @if $gel-grid-enable--whitespace-fix {\n            letter-spacing: normal;\n            word-spacing: normal;\n            text-rendering: auto;\n        }\n    }\n}\n\n\n// Outputs a collection of generic grid classes\n//\n// @author Shaun Bent\n//\n@mixin gel-output-grid() {\n    /**\n     * Grid containing element\n     */\n    .#{$gel-grid-namespace}wrap,\n    %#{$gel-grid-namespace}wrap {\n        @include gel-wrap;\n    }\n\n    /**\n     * A grid row\n     */\n    .#{$gel-grid-namespace}layout,\n    %#{$gel-grid-namespace}layout {\n        @include gel-layout;\n    }\n\n    /**\n     * A single grid item\n     */\n    .#{$gel-grid-namespace}layout__item,\n    %#{$gel-grid-namespace}layout__item {\n        @include gel-layout-item;\n    }\n\n    /**\n     * Layouts with no gutters.\n     */\n    .#{$gel-grid-namespace}layout--flush,\n    %#{$gel-grid-namespace}layout--flush {\n        margin-left: 0;\n\n        > .#{$gel-grid-namespace}layout__item,\n        > %#{$gel-grid-namespace}layout__item {\n            padding-left: 0;\n        }\n    }\n\n    /**\n     * Reversed rendered order of layout items, e.g. items 1, 2, 3, 4 in your\n     * markup will display in order 4, 3, 2, 1 on your page\n     */\n    .#{$gel-grid-namespace}layout--rev,\n    %#{$gel-grid-namespace}layout--rev {\n        direction: rtl;\n        text-align: left;\n\n        > .#{$gel-grid-namespace}layout__item,\n        > %#{$gel-grid-namespace}layout__item {\n            direction: ltr;\n            text-align: left;\n        }\n    }\n\n    /**\n     * Align layout items to the vertical centers of each other\n     */\n    .#{$gel-grid-namespace}layout--middle,\n    %#{$gel-grid-namespace}layout--middle {\n\n        > .#{$gel-grid-namespace}layout__item,\n        > %#{$gel-grid-namespace}layout__item {\n            vertical-align: middle;\n        }\n    }\n\n    /**\n     * Align layout items to the vertical bottoms of each other\n     */\n    .#{$gel-grid-namespace}layout--bottom,\n    %#{$gel-grid-namespace}layout--bottom {\n\n        > .#{$gel-grid-namespace}layout__item,\n        > %#{$gel-grid-namespace}layout__item {\n            vertical-align: bottom;\n        }\n    }\n\n    /**\n     * Make the layout items fill up from the right hand side\n     */\n    .#{$gel-grid-namespace}layout--right,\n    %#{$gel-grid-namespace}layout--right {\n        text-align: right;\n\n        > .#{$gel-grid-namespace}layout__item,\n        > %#{$gel-grid-namespace}layout__item {\n            text-align: left;\n        }\n    }\n\n    /**\n     * Make the layout items fill up from the center outward\n     */\n    .#{$gel-grid-namespace}layout--center,\n    %#{$gel-grid-namespace}layout--center {\n        text-align: center;\n\n        > .#{$gel-grid-namespace}layout__item,\n        > %#{$gel-grid-namespace}layout__item {\n            text-align: left;\n        }\n    }\n\n    /**\n     * Cause layout items to take up a non-explicit amount of width\n     */\n    .#{$gel-grid-namespace}layout--auto,\n    %#{$gel-grid-namespace}layout--auto {\n\n        > .#{$gel-grid-namespace}layout__item,\n        > %#{$gel-grid-namespace}layout__item {\n            width: auto;\n        }\n    }\n}\n\n\n// Outputs a collection of grid-agnostic width utility classes which can be applied be\n// combined with the grid system or applied to any element to give it a percentage based with.\n//\n// If the optional 1280 toggle class is defined then all 1280 width classes will be wrapped\n// in the specified toggle class\n//\n// @author Shaun Bent\n//\n@mixin gel-output-widths() {\n    @if $core {\n        @include _gel-widths($gel-grid-columns);\n    }\n\n    @if $enhanced {\n        @each $breakpoint in $gel-grid-breakpoints {\n            @include mq($from: '#{$gel-grid-breakpoint-namespace}#{$breakpoint}') {\n                @include _gel-widths($gel-grid-columns, $breakpoint);\n            }\n        }\n\n        @if $gel-grid-1280-toggle-class != null {\n            .#{$gel-grid-1280-toggle-class} {\n                @each $breakpoint in $gel-grid-breakpoints--1280 {\n                    @include mq($from: '#{$gel-grid-breakpoint-namespace}#{$breakpoint}') {\n                        @include _gel-widths($gel-grid-columns, $breakpoint);\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n// Returns a percentage value for the required number of columns\n//\n// @param {Number}  $span - number of columns required to span\n// @param {Number}  $columns ($gel-grid-default-columns) - total number of columns available\n//\n// @return {Number} Percentage for the required number of columns\n//\n// @author          Shaun Bent\n//\n@function gel-columns($span, $columns: $gel-grid-default-columns) {\n\t@if $span >= 1 {\n\t\t// Convert the given span to a fraction of the columns\n\t\t@return percentage($span / $columns);\n\t} @else {\n\t\t// A fraction has been supplied so lets just converting it to a percentage\n\t\t@return percentage($span);\n\t}\n}\n\n\n// Get a width for a specific number of columns\n//\n// @param {Number} $span - number of columns required to span\n// @param {Number} $columns ($gel-grid-default-columns) - total number of columns available\n//\n// @author Shaun Bent\n//\n@mixin gel-columns($span, $columns: $gel-grid-default-columns) {\n\twidth: gel-columns($span, $columns);\n}\n\n\n// Generate width classes for the requested columns and breakpoint modifier\n//\n// @param {List} $columns - a list of all the columns you'd like to be output\n// @param {String} $breakpoint - any breakpoint suffix appended to the class\n//\n// @author Shaun Bent\n//\n@mixin _gel-widths($columns, $breakpoint: null) {\n    $breakpoint-suffix: '';\n\n    @if $breakpoint != null {\n        $breakpoint-suffix: \\@#{$breakpoint};\n    }\n\n\t@each $column in $columns {\n\t\t@if $column == 1 {\n\t\t\t// no point outputting 100% several times so lets just do it once\n\t\t\t.#{$gel-grid-namespace}#{$column}\\/#{$column}#{$breakpoint-suffix} {\n\t\t\t\twidth: 100% !important;\n\t\t\t}\n\t\t} @else {\n\t\t\t@for $i from 1 to $column {\n\t\t\t\t.#{$gel-grid-namespace}#{$i}\\/#{$column}#{$breakpoint-suffix} {\n\t\t\t\t\twidth: gel-columns($i / $column) !important;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","///*------------------------------------*\\\n//    # GEL GRID - SETTINGS\n//\\*------------------------------------*/\n\n// The following variables are used to configure the GEL Grid component.\n// These variables should not be modified or adjusted directly; you should\n// predefine the variables in your own project, to overide these default settings.\n\n\n/// General configuration\n//\n// The default namespace applied to all grid classes output is inherited\n// from the default gel-namespace: `gel-`.\n//\n// @type String\n// @link http://bit.ly/1Z6hPfd\n//\n$gel-grid-namespace: $gel-namespace !default;\n\n// The prefix applied to all GEL breakpoints used by Sass MQ. By default this\n// inherits from the default gel-breakpoint-prefix: `gel-bp-`.\n//\n// @type String\n// @link http://bit.ly/1nxxE0p\n//\n$gel-grid-breakpoint-namespace: $gel-breakpoint-prefix !default;\n\n// Not all pages or products will be using 1280px grid, you can conditional\n// wrap 1280px grid styles in a class so they only apply if 1280px is required\n//\n// For example: ORB provides a class of `b-pw-1280` if 1280 ORB is enabled\n//\n// @type String\n//\n$gel-grid-1280-toggle-class: null !default;\n\n\n/// Grid configuration\n//\n// Grid max-width points\n//\n// @type String\n//\n$gel-grid-max-width-1008: 1008px;\n$gel-grid-max-width-1280: 1280px;\n\n// The fixed margins and gutters increase in size for larger screens\n//\n// @type String\n//\n$gel-grid-margin-change: 400px;\n$gel-grid-gutter-change: 600px;\n\n// Which GEL breakpoints should width classes be output for?\n//\n// @type List\n// @link http://bit.ly/1PjPdLz\n//\n$gel-grid-breakpoints: (s, m, l) !default;\n\n// Which GEL breakpoints relate specifically to the 1280 breakpoint?\n//\n// These are specifically divided incase the optional `toggle-class`\n// is being used?\n//\n// @type List\n//\n$gel-grid-breakpoints--1280: (xl, xxl) !default;\n\n// The default number of columns width calucations should be based upon\n// if no other number has been provided\n//\n// @type Int\n//\n$gel-grid-default-columns: 12 !default;\n\n// A list of all the columns width classes should be generated for\n//\n// @type List\n//\n$gel-grid-columns: (\n\t1\n\t2\n\t3\n\t4\n\t5\n\t8\n\t10\n\t12\n\t24\n) !default;\n\n\n/// Output configuration\n//\n// Should grid CSS classes be output?\n//\n// @type Boolean\n//\n$gel-grid-enable--markup-output: false !default;\n\n// Should 1280px breakpoint styles be output?\n//\n// @type Boolean\n//\n$gel-grid-enable--1280-breakpoint: true !default;\n\n// Enable the bundled `box-sizing: border-box;` if not\n// already applied globally\n//\n// @type Boolean\n// @link http://bit.ly/1bfMrhO\n//\n$gel-grid-enable--box-sizing: false !default;\n\n// Apply a CSS fix to remove the whitespace between `inline-block`\n// items. Note: This fix is not 100% to work.\n//\n// @type Boolean\n// @link http://bit.ly/1bfMrhO\n//\n$gel-grid-enable--whitespace-fix: false !default;\n\n\n// If the optional 1280 toggle class it not enabled we need to merge\n// all the breakpoints into a single map\n//\n@if $gel-grid-1280-toggle-class == null {\n\t$gel-grid-breakpoints: join($gel-grid-breakpoints, $gel-grid-breakpoints--1280);\n}\n","///*------------------------------------*\\\n//    # GEL GLOBALS\n//\\*------------------------------------*/\n\n// The following variables provide a common configuration to use across\n// various GEL components. These variables should not be modified or\n// adjusted directly; you should predefine the variables in your own project,\n// to overide these default settings.\n\n\n/// Namespace\n//\n// By default all GEL components are namespaced with `gel-`, this allows us to\n// share components without the chance of there being any conflicts within existing\n// products. It also helps with sharing components across products.\n//\n// @type String\n//\n$gel-namespace: 'gel-' !default;\n\n\n\n/// Spacing\n//\n// GEL spacing is based on an 8px baseline and multiples of this number, where possible\n// this baseline and multiples of should act as your default spacing unit. This helps to\n// ensure we have consistant spacing across products.\n//\n// @type Number (with units)\n//\n$gel-spacing-unit: 8px !default;\n\n// We also make available an alternative spacing unit based on a 12px baseline to allow more\n// flexibility with spacing elements\n//\n// @type Number (with units)\n//\n$gel-alt-spacing-unit: 12px !default;\n\n\n\n/// Base settings\n//\n// Base settings are used primarly by our tools at the moment but there use could change in\n// the future.\n\n// Base font size identifies the font-size of the HTML element thus allowing consistant\n// calculation of rem units\n//\n// @type Number (with units)\n//\n$gel-base-font-size: 16px !default;\n\n\n\n/// Breakpoints\n//\n// Our global breakpoints allow us to make major changes in the grid and use typography\n// consistently across our products.\n//\n// Between these global breakpoints you can also add component breakpoints where the content needs it.\n//\n\n// The prefix applied to all GEL breakpoints\n//\n// @type String\n//\n$gel-breakpoint-prefix: 'gel-bp-' !default;\n\n// The names applied to each of our breakpoints. We're taking a t-shirt sizing naming convention\n//\n// @type Map\n//\n$gel-breakpoint-names: (xs, s, m, l, xl, xxl) !default;\n\n// The widths of our major breakpoints\n//\n// @type Map\n//\n$gel-breakpoint-sizes: (240px, 400px, 600px, 900px, 1008px, 1280px) !default;\n\n// If we're generating a fixed width output which breakpoint to use as the maximum\n//\n// @type String\n//\n$gel-breakpoint-static: gel-bp-l !default;\n\n\n// Loop through each of our breakpoint-sizes, map this with the appropriate name\n// and append it to the $mq-breakpoints map.\n$gel-breakpoints: ();\n@each $breakpoint in $gel-breakpoint-sizes {\n    $i: index($gel-breakpoint-sizes, $breakpoint);\n    $breakpoint-name: #{$gel-breakpoint-prefix}#{nth($gel-breakpoint-names, $i)};\n\n    $gel-breakpoints: map-merge($gel-breakpoints, ($breakpoint-name: $breakpoint)) !global;\n}\n\n\n\n/// MQ Config\n//\n// We're making use of the Guardians Sass MQ script to handle our media queries,\n// it also handles outputing a static version without Media Queries for older\n// versions of IE\n\n// MQ expects a Sass Map containing the available breakpoints\n$mq-breakpoints: $gel-breakpoints;\n\n// In order to output the appropriate styles for older versions of IE which don't\n// support Media Queries we need to define which breakpoint we want styles output for\n$mq-static-breakpoint: #{$gel-breakpoint-static};\n\n\n\n// Define a variable so we can tell the other components the settings are available\n$gel-settings-available: true;\n","@charset \"UTF-8\"; // Fixes an issue where Ruby locale is not set properly\n                  // See https://github.com/sass-mq/sass-mq/pull/10\n\n/// Base font size on the `<body>` element\n/// @type Number (unit)\n$mq-base-font-size: 16px !default;\n\n/// Responsive mode\n///\n/// Set to `false` to enable support for browsers that do not support @media queries,\n/// (IE <= 8, Firefox <= 3, Opera <= 9)\n///\n/// You could create a stylesheet served exclusively to older browsers,\n/// where @media queries are rasterized\n///\n/// @example scss\n///  // old-ie.scss\n///  $mq-responsive: false;\n///  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n///                   // larger breakpoints will be ignored\n///\n/// @type Boolean\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default;\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (\n    mobile:  320px,\n    tablet:  740px,\n    desktop: 980px,\n    wide:    1300px\n) !default;\n\n/// Static breakpoint (for fixed-width layouts)\n///\n/// Define the breakpoint from $mq-breakpoints that should\n/// be used as the target width for the fixed-width layout\n/// (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n///\n/// @example scss\n///  // tablet-only.scss\n///  //\n///  // Ignore all styles above tablet breakpoint,\n///  // and fix the styles (e.g. layout) at tablet width\n///  $mq-responsive: false;\n///  $mq-static-breakpoint: tablet;\n///  @import 'main'; // @media queries in this file will be rasterized up to tablet\n///                   // larger breakpoints will be ignored\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width, e.g. (mobile, tablet, desktop).\n///\n/// @type map\n$mq-show-breakpoints: () !default;\n\n/// Customize the media type (e.g. `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\n///\n/// @example scss\n///  $font-size-in-ems: mq-px2em(16px);\n///  p { font-size: mq-px2em(16px); }\n///\n/// @requires $mq-base-font-size\n/// @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\n    @if unitless($px) {\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n        @return mq-px2em($px * 1px, $base-font-size);\n    } @else if unit($px) == em {\n        @return $px;\n    }\n    @return ($px / $base-font-size) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n///\n/// @example scss\n///  $tablet-width: mq-get-breakpoint-width(tablet);\n///  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints) {\n    @if map-has-key($breakpoints, $name) {\n        @return map-get($breakpoints, $name);\n    } @else {\n        @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    }\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $until (false) - One of $mq-breakpoints\n/// @param {String | Boolean} $and (false) - Additional media query parameters\n/// @param {String} $media-type ($mq-media-type) - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints ($mq-breakpoints)\n/// @ignore @param {String} $static-breakpoint ($mq-static-breakpoint)\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $mq-media-type\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-static-breakpoint\n/// @requires {function} mq-px2em\n/// @requires {function} mq-get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n    $from: false,\n    $until: false,\n    $and: false,\n    $media-type: $mq-media-type,\n    $breakpoints: $mq-breakpoints,\n    $responsive: $mq-responsive,\n    $static-breakpoint: $mq-static-breakpoint\n) {\n    $min-width: 0;\n    $max-width: 0;\n    $media-query: '';\n\n    // From: this breakpoint (inclusive)\n    @if $from {\n        @if type-of($from) == number {\n            $min-width: mq-px2em($from);\n        } @else {\n            $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints));\n        }\n    }\n\n    // Until: that breakpoint (exclusive)\n    @if $until {\n        @if type-of($until) == number {\n            $max-width: mq-px2em($until);\n        } @else {\n            $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - .01em;\n        }\n    }\n\n    // Responsive support is disabled, rasterize the output outside @media blocks\n    // The browser will rely on the cascade itself.\n    @if $responsive == false {\n        $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints);\n        $target-width: mq-px2em($static-breakpoint-width);\n\n        // Output only rules that start at or span our target width\n        @if (\n            $and == false\n            and $min-width <= $target-width\n            and (\n                $until == false or $max-width >= $target-width\n            )\n        ) {\n            @content;\n        }\n    }\n\n    // Responsive support is enabled, output rules inside @media queries\n    @else {\n        @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }\n        @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }\n        @if $and            { $media-query: '#{$media-query} and #{$and}'; }\n\n        // Remove unnecessary media query prefix 'all and '\n        @if ($media-type == 'all' and $media-query != '') {\n            $media-type: '';\n            $media-query: str-slice(unquote($media-query), 6);\n        }\n\n        @media #{$media-type + $media-query} {\n            @content;\n        }\n    }\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $mq-breakpoints\n///\n/// @example scss\n///  @include mq-add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin mq-add-breakpoint($name, $width) {\n    $new-breakpoint: ($name: $width);\n    $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints ($mq-show-breakpoints) - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints ($mq-breakpoints) - Breakpoint names and sizes\n///\n/// @requires {Variable} $mq-breakpoints\n/// @requires {Variable} $mq-show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include mq-show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints) {\n    body:before {\n        background-color: #FCF8E3;\n        border-bottom: 1px solid #FBEED5;\n        border-left: 1px solid #FBEED5;\n        color: #C09853;\n        font: small-caption;\n        padding: 3px 6px;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 100;\n\n        // Loop through the breakpoints that should be shown\n        @each $show-breakpoint in $show-breakpoints {\n            $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints);\n            @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n                content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\";\n            }\n        }\n    }\n}\n\n@if length($mq-show-breakpoints) > 0 {\n    @include mq-show-breakpoints;\n}\n","///*------------------------------------*\\\n//    # MATH\n//\\*------------------------------------*/\n\n// Halve and double numbers, returning rounded integers. E.g.:\n//\n// .foo {\n//     padding: double($gel-spacing-unit);\n// }\n//\n// @param {Int}     $gel-number - The initial integer you wish to apply\n//                                the math logic to\n//\n// @return {Int}    The updated integer\n//\n// @author          Harry Roberts - http://bit.ly/1NTThPq\n//\n@function quarter($gel-number) {\n    @return round($gel-number / 4);\n}\n\n@function third($gel-number) {\n    @return round($gel-number / 3);\n}\n\n@function halve($gel-number) {\n    @return round($gel-number / 2);\n}\n\n@function double($gel-number) {\n    @return round($gel-number * 2);\n}\n\n@function triple($gel-number) {\n    @return round($gel-number * 3);\n}\n\n@function quadruple($gel-number) {\n    @return round($gel-number * 4);\n}\n","// orbit sets the font-size to 1.3em so we need to reset this\n// see: https://github.com/bbc/nav-orbit/blob/bf4019f1e62ceeb0ee95fb0467ef44ca398cc36b/static_assets/sources/sass/header/_base.scss#L56\n.orb-nav-pri .se-searchbox-app {\n  font-size: #{(1 / 1.3)}em;\n\n  a {\n    min-height: auto;\n  }\n}\n\n@media screen and (min-width: 1280px){\n  .b-pw-1280 .orb-nav-pri a.se-episode-suggestion {\n    @include rem(\"padding-left\", $gel-spacing-unit);\n    @include rem(\"padding-right\", $gel-spacing-unit);\n  }\n}\n","///*------------------------------------*\\\n//    # REM\n//\\*------------------------------------*/\n\n// We need to check that the GEL settings are available globally\n$gel-settings-available: false !default;\n@if ($gel-settings-available == false) {\n    @warn \"Missing Dependency: Have you included the GEL settings?\";\n}\n\n\n$gel-tools-rem-enable--function: true !default;\n$gel-tools-rem-enable--mixin: true !default;\n$gel-tools-rem-enable--fallback: true !default;\n\n\n// 'rem' is a Sass function that converts pixel values to rem values\n// for whatever property is passed to it.\n//\n// @param {Int}     $value - The unit you want converting to a rem unit\n// @param {Int}     $baseline ($gel-base-font-size) - The base font size of the page\n//\n// @return {Int}    The supplied converted to a rem unit\n//\n// @author          Kaelig - https://github.com/guardian/guss-rem\n//\n@function rem($value, $baseline: $gel-base-font-size) {\n\n    // if function is disabled then return the value\n    @if ($gel-tools-rem-enable--function == false) {\n        @return $value;\n    }\n\n    @if $value == 0 {\n        @return 0; // 0rem -> 0\n    }\n\n    @if type-of($value) == list {\n        $result: ();\n\n        @each $e in $value {\n            $result: append($result, rem($e, $baseline));\n        }\n\n        @return $result;\n    }\n\n    @return if(type-of($value) == number and unit($value) == px, $value / $baseline * 1rem, $value);\n}\n\n\n\n// Converts pixel values to rem values for whatever property is passed to it. It returns two\n// lines of code — one of the regular pixel values (for old IE), and another with the\n// converted rem values (for everyone else).\n//\n// @param {Int}     $property - The CSS property (e.g. font-size, margin-top)\n// @param {Int}     $value - The pixel value you want to convert\n//\n// @author          Shaun Bent\n//\n@mixin rem($property, $value) {\n\n    // Return the pixel value first\n    @if ($gel-tools-rem-enable--mixin == false or $gel-tools-rem-enable--fallback == true) {\n        #{$property}: $value;\n    }\n\n    // Pass the px value into the rem function\n    @if ($gel-tools-rem-enable--function == true and $gel-tools-rem-enable--mixin == true) {\n        #{$property}: rem($value);\n    }\n\n}\n","// Radio resets box-sizing for everything inside #orb-banner\n// scss-lint:disable SelectorDepth, IdSelector\n#orb-banner .b-header--dark-grey--grey .se-searchbox-app * {\n  box-sizing: border-box;\n}\n","$gel-namespace: \"se-g-\" !global;\n$gel-grid-1280-toggle-class: \"b-pw-1280\" !global;\n$gel-grid-enable--markup-output: true;\n$gel-type-touch-class: \"se-no-touch\";\n\n@import \"gel-sass-tools/sass-tools\";\n@import \"sass-mq/mq\";\n@import \"gel-typography/typography\";\n@import \"gel-grid/grid\";\n\n@import \"mixins\";\n@import \"vars\";\n\n// Currently not using sass generate by sprite gulp plugin\n@import \"blame/orbit\";\n@import \"blame/radio\";\n\n.se-searchbox-app {\n  // default font weight within searchbox app\n  font-weight: normal;\n\n  box-sizing: border-box;\n\n  *,\n  &:before,\n  &:after {\n    box-sizing: inherit;\n  }\n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-shadow: 1px 1px 1px $se-font-smoothing;\n\n  .se {\n    @import \"common\";\n    @import \"components/searchbox\";\n    @import \"components/search-suggestions\";\n    @import \"components/episode-suggestions\";\n    @import \"components/episode-suggestion\";\n    @import \"components/episode-image\";\n    // @import \"blame/icons\";\n  }\n\n  @import \"components/view-all-button\";\n}\n\n// See comment in scss file\n@import \"components/search-suggestion\";\n\n// Not nested as we need to specify no-touch\n@import \"components/episode-suggestion--no-touch\";\n\n//theme\n@import \"themes/iplayer\";\n@import \"themes/sounds\";","$searchbox-btn-width: 44px;\n$searchbox-btn-height: $searchbox-btn-width;\n$searchbox-icon-size: 22px;\n$searchbox-btn-border: #ffffff;\n\n$searchbox-bg: #1188bb;\n$searchbox-text-shadow: rgba(0, 0, 0, 0.004);\n$searchbox-tap-highlight: rgba(220, 220, 220, 0.5);\n\n$searchbox-bg-iplayer: #020011;\n$searchbox-bg-sounds: #000000;\n\n$searchbox--input-txt: #262626;\n$searchbox--input-bg: #ffffff;\n$searchbox-title-colour: #ffffff;\n\n$suggestion-text-colour: #262626;\n$suggestion-text-colour-iplayer: #ffffff;\n$suggestion-text-colour-sounds: #ffffff;\n$suggestion-highlight-bg-colour: #eaeaea;\n$suggestion-highlight-bg-colour-iplayer: #333333;\n$suggestion-highlight-text-colour: #0c719c;\n$suggestion-highlight-text-colour-iplayer: #f54997;\n$suggestion-highlight-text-colour-sounds: #ff4900;\n$suggestion-padding: 11px $gel-spacing-unit 11px;\n\n$suggestion-heading-colour: #757575;\n$suggestion-heading-colour-iplayer-radio: #a3a3a3;\n$suggestion-heading-colour-sounds: #bebebe;\n$suggestion-border-colour: #e3e3e3;\n$suggestion-border-colour-iplayer-radio: #4a4a4a;\n$suggestion-border-colour-sounds: #646464;\n\n$episode-suggestion-heading-colour: #262626;\n$episode-suggestion-heading-colour-iplayer: #ffffff;\n$episode-suggestion-heading-colour-sounds: #ffffff;\n$episode-suggestion-subheading-colour: #757575;\n$episode-suggestion-subheading-colour--iplayer-radio: #bbbbbb;\n$episode-suggestion-subheading-colour-sounds: #bebebe;\n$episode-suggestion-bg-colour-hover-sounds: #1a1a1a;\n\n$episode-image-white: #ffffff;\n$episode-image-black: #000000;\n$episode-image-iplayer-pink: #f54997;\n$episode-image-sounds: #ff4900;\n\n\n$placeholder-img-bg: #dedede;\n\n$bp-small: 600px;\n$bp-medium: 768px;\n\n$col-4_24: percentage(4 / 24);\n\n$view-all-results-btn-bg: #252833;\n$view-all-results-btn-bg--hover: #f54997;\n$view-all-results-btn-height: 32px;\n$view-all-results-btn-color: #ffffff;\n\n$se-icon-size: 32px;\n\n$se-font-smoothing: rgba(0, 0, 0, 0.004);\n\n$drawer-border-color--iplayer: #444444;\n$drawer-bg-color--iplayer: $searchbox-bg-iplayer;\n","&-sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: none;\n}\n\n&-hidden-s {\n  // scss-lint:disable ImportantRule\n  @include mq($until: ($bp-small - 1)) {\n    display: none !important;\n  }\n}\n\n&-show-s {\n  // scss-lint:disable ImportantRule\n  @include from-bq-s {\n    display: none !important;\n  }\n}\n","&-searchbox-panel {\n  background: $searchbox-bg;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n\n  -webkit-font-smoothing: antialiased;\n  text-shadow: 1px 1px 1px $searchbox-text-shadow;\n\n  a {\n    text-decoration: none;\n    -webkit-tap-highlight-color: $searchbox-tap-highlight;\n  }\n}\n\n.b-reith-sans-loaded &-searchbox-title {\n  font-family: inherit;\n}\n\n&-searchbox-title {\n  display: none;\n  font-family: \"Gill Sans MT\", Calibri, sans-serif;\n  font-size: 4.8em;\n  color: $searchbox-title-colour;\n  margin-top: double($gel-spacing-unit);\n  text-transform: uppercase;\n  line-height: $searchbox-btn-height;\n\n  @include from-bq-xxl {\n    display: block;\n    @include gel-layout-item($width: 4 / 24);\n  }\n}\n\n&-searchbox {\n  position: relative;\n  @include rem(\"margin-top\", double($gel-spacing-unit));\n  @include rem(\"margin-bottom\", double($gel-spacing-unit));\n\n  @include from-bq-xxl {\n    @include gel-layout-item($width: 20 / 24);\n  }\n\n  &__input {\n    display: block;\n    @include rem(\"margin-right\", double($searchbox-btn-width));\n\n    &__field {\n      width: 100%;\n      @include rem(\"height\", 44px);\n      outline: none;\n      border-image: none;\n      border: none;\n      border-radius: 0;\n      color: $searchbox--input-txt;\n      -webkit-appearance: none;\n      background-color: $searchbox--input-bg;\n      font-size: 1.6em;\n      font-family: inherit;\n      @include rem(\"padding\", 10px 0 10px $gel-spacing-unit);\n\n      @include from-bq-s {\n        @include rem(\"padding-left\", double($gel-spacing-unit));\n        font-size: 2em;\n      }\n    }\n\n    &__field::-ms-clear {\n      display: none;\n      width: 0;\n      height: 0;\n    }\n  }\n\n  &__submit,\n  &__clear {\n    background: $searchbox--input-bg url(\"../img/gel-icon-search.svg\") no-repeat scroll 0 0;\n    background-size: $searchbox-icon-size;\n    @include rem(\"background-position\", center);\n    @include rem(\"width\", $searchbox-btn-width);\n    @include rem(\"height\", $searchbox-btn-height);\n    position: absolute;\n    top: 0;\n    padding: 0;\n    cursor: pointer;\n    border: none;\n    border-radius: 0;\n    text-indent: -9999px;\n  }\n\n  &__submit {\n    @include rem(\"right\", $searchbox-btn-width + 2);\n  }\n\n  &__clear {\n    right: 0;\n    background-image: url(\"../img/gel-icon-no.svg\");\n    background-color: $searchbox-bg;\n    opacity: 0.4;\n\n    &--visible {\n      opacity: 1;\n    }\n  }\n\n}\n\n&-no-search-suggestions {\n  @include rem(\"padding-top\", 12px);\n\n  @include from-bq-m {\n    padding-top: 0;\n  }\n}\n","// Return a flexible font-size and line-height with a pixel based fallback\n@mixin font-size($font-size, $line-height: false) {\n  @include rem(\"font-size\", $font-size);\n\n  // If a line-height is defined then return that also\n  @if (type-of($line-height) == number) {\n    @include rem(\"line-height\", $line-height);\n  }\n}\n\n@mixin from-bq-s {\n  @include mq($from: $bp-small) {\n    @content;\n  }\n}\n\n@mixin from-bq-m {\n  @include mq($from: $bp-medium) {\n    @content;\n  }\n}\n\n@mixin from-bq-xxl {\n  .b-pw-1280 & {\n    @include mq($from: gel-bp-xxl) {\n      @content;\n    }\n  }\n}\n\n// scss-lint:disable VendorPrefix\n@mixin transition($transition...) {\n  -moz-transition: $transition;\n  -o-transition: $transition;\n  -webkit-transition: $transition;\n  transition: $transition;\n}\n","&-search-suggestions {\n  @include gel-layout-item;\n  @include rem(\"padding-bottom\", 4px);\n\n  @include from-bq-m {\n    @include gel-layout-item($width: 5 / 12);\n    @include rem(\"padding-bottom\", (3 * $gel-spacing-unit));\n  }\n\n  @include from-bq-xxl {\n    @include gel-layout-item($width: 8 / 24);\n    margin-left: $col-4_24;\n  }\n\n  .se-suggestions-container__title {\n    display: none;\n  }\n\n  &.se-noresults {\n    display: none;\n  }\n\n  @include from-bq-m {\n    &.se-noresults {\n      display: inline-block;\n    }\n\n    .se-suggestions-container__title {\n      display: block;\n      margin: 0;\n      border-bottom: 1px solid $suggestion-border-colour;\n      color: $suggestion-heading-colour;\n      font-weight: normal;\n\n      @include gel-typography(\"pica\");\n      @include rem(\"padding\", 12px 0 $gel-spacing-unit $gel-spacing-unit);\n\n      @include from-bq-s {\n        @include rem(\"padding-top\", 12px);\n        @include rem(\"padding-left\", double($gel-spacing-unit));\n      }\n    }\n  }\n}\n\n&-suggestions-only {\n  .se-search-suggestions {\n    @include from-bq-m {\n      @include gel-layout-item;\n    }\n\n    @include from-bq-xxl {\n      @include gel-layout-item($width: 20 / 24);\n      margin-left: $col-4_24;\n    }\n\n    .se-suggestions-container__title {\n      display: none;\n    }\n  }\n}\n","///*------------------------------------*\\\n//    # GEL TYPOGRAPHY - SETTINGS\n//\\*------------------------------------*/\n\n// The following variables are used to configure the GEL Typography component.\n// These variables should not be modified or adjusted directly; you should\n// predefine the variables in your own project, to overide these default settings.\n\n\n/// General configuration\n//\n// The default namespace applied to all typography classes output is inherits\n// from the default gel-namespace: `gel-`.\n//\n// @type String\n// @link http://bit.ly/1Z6hPfd\n//\n$gel-type-namespace: $gel-namespace !default;\n\n// The classname used to signify if the device needs to display the no-touch group. This\n// class needs to be applied to high level elemet such as `body` or `html`\n//\n// @type String\n//\n$gel-type-touch-class: 'no-touch' !default;\n\n// Which typography group contains the base or core typography styles\n//\n// @type String\n//\n$gel-type-base-group: 'group-a';\n\n// Which typography group contains our non-touch typography styles\n//\n// @type String\n//\n$gel-type-no-touch-group: 'group-d';\n\n\n/// Output configuration\n//\n// By default the typography component has no output and just exposes a\n// series of Sass mixins and tools. Enabling this option will output\n// a series of typography classes to be used within your markup.\n//\n// @type Bool\n//\n$gel-type-enable--markup-output: false !default;\n\n// The BBCs global header and footer, Barlesque, will set the correct font-family\n// on the <body> tag but if you're working on a project without Barlesque will need\n// to enable this flag to have the correct font-family declared\n//\n// @type Bool\n//\n$gel-type-enable--font-family: false !default;\n\n// Map the GEL Typography classes to the relevant HTML elements\n//\n// @type Bool\n//\n$gel-type-enable--base-elements: false !default;\n\n\n// The GEL typography specification for each type class at each type group.\n// Having these values stored in a map allows them to be easily updated and\n// customised for specific non-latin character sets.\n//\n// @type Map\n//\n$gel-type-settings: (\n    'canon': (\n        'group-a': (\n          'font-size': 28px,\n          'line-height': 32px\n        ),\n        'group-b': (\n          'font-size': 32px,\n          'line-height': 36px\n        ),\n        'group-c': (\n          'font-size': 52px,\n          'line-height': 56px\n        ),\n        'group-d': (\n          'font-size': 44px,\n          'line-height': 48px\n        )\n    ),\n    'canon-bold': (\n        'group-a': (\n            'font-weight': bold,\n            'letter-spacing': -1px\n        )\n    ),\n    'trafalgar': (\n        'group-a': (\n          'font-size': 20px,\n          'line-height': 24px\n        ),\n        'group-b': (\n          'font-size': 24px,\n          'line-height': 28px\n        ),\n        'group-c': (\n          'font-size': 36px,\n          'line-height': 40px\n        ),\n        'group-d': (\n          'font-size': 32px,\n          'line-height': 36px\n        )\n    ),\n    'trafalgar-bold': (\n        'group-a': (\n            'font-weight': bold,\n            'letter-spacing': -1px\n        )\n    ),\n    'paragon': (\n      'group-a': (\n        'font-size': 20px,\n        'line-height': 24px\n      ),\n      'group-b': (\n        'font-size': 22px,\n        'line-height': 26px\n      ),\n      'group-c': (\n        'font-size': 30px,\n        'line-height': 34px\n      ),\n      'group-d': (\n        'font-size': 28px,\n        'line-height': 32px\n      )\n    ),\n    'paragon-bold': (\n      'group-a': (\n          'font-weight': bold,\n          'letter-spacing': -1px\n      )\n    ),\n    'double-pica': (\n        'group-a': (\n          'font-size': 20px,\n          'line-height': 24px\n        ),\n        'group-c': (\n          'font-size': 26px,\n          'line-height': 30px\n        ),\n        'group-d': (\n          'font-size': 24px,\n          'line-height': 28px\n        )\n    ),\n    'double-pica-bold': (\n        'group-a': (\n            'font-weight': bold,\n            'letter-spacing': -1px\n        )\n    ),\n    'great-primer': (\n        'group-a': (\n          'font-size': 18px,\n          'line-height': 22px\n        ),\n        'group-c': (\n          'font-size': 21px,\n          'line-height': 24px\n        ),\n        'group-d': (\n          'font-size': 20px\n        )\n    ),\n    'great-primer-bold': (\n        'group-a': (\n            'font-weight': bold\n        ),\n        'group-b': (\n            'letter-spacing': -1px\n        )\n    ),\n    'pica': (\n        'group-a': (\n          'font-size': 15px,\n          'line-height': 20px\n        ),\n        'group-b': (\n          'font-size': 16px,\n          'line-height': 20px\n        ),\n        'group-c': (\n          'font-size': 18px,\n          'line-height': 22px\n        ),\n        'group-d': (\n          'font-size': 16px,\n          'line-height': 20px\n        )\n    ),\n    'pica-bold': (\n        'group-a': (\n            'font-weight': bold\n        )\n    ),\n    'long-primer': (\n        'group-a': (\n          'font-size': 15px,\n          'line-height': 18px\n        ),\n        'group-c': (\n          'line-height': 20px\n        ),\n        'group-d': (\n          'font-size': 14px,\n          'line-height': 18px\n        )\n    ),\n    'long-primer-bold': (\n        'group-a': (\n            'font-weight': bold\n        )\n    ),\n    'brevier': (\n        'group-a': (\n          'font-size': 14px,\n          'line-height': 16px\n        ),\n        'group-b': (\n          'line-height': 18px\n        ),\n        'group-d': (\n          'font-size': 13px,\n          'line-height': 16px\n        )\n    ),\n    'brevier-bold': (\n        'group-a': (\n            'font-weight': bold\n        )\n    ),\n    'minion': (\n        'group-a': (\n          'font-size': 12px,\n          'line-height': 16px,\n          'text-transform': uppercase\n        ),\n        'group-c': (\n          'font-size': 13px\n        ),\n        'group-d': (\n          'font-size': 12px\n        )\n    ),\n    'minion-bold': (\n        'group-a': (\n            'font-weight': bold\n        )\n    ),\n    'body-copy': (\n        'group-a': (\n          'font-size': 15px,\n          'line-height': 20px\n        ),\n        'group-b': (\n          'font-size': 16px,\n          'line-height': 22px\n        ),\n        'group-c': (\n          'font-size': 18px,\n          'line-height': 24px\n        ),\n        'group-d': (\n          'font-size': 16px,\n          'line-height': 22px\n        )\n    )\n) !default;\n\n\n// Adds the typography specific breakpoints to the Sass MQ list\n// of breakpoints\n//\n@if (mixin-exists(mq)) {\n    @include mq-add-breakpoint(gel-bp-type-b, 320px);\n    @include mq-add-breakpoint(gel-bp-type-c, 600px);\n} @else {\n    @warn 'Missing dependency: `Sass MQ`. Ensure this is included before this library';\n}\n","///*------------------------------------*\\\n//    # GEL TYPOGRAPHY - TOOL\n//\\*------------------------------------*/\n\n// Replace `$search` with `$replace` in `$string`\n//\n// @param {String} $string - Initial string\n// @param {String} $search - Substring to replace\n// @param {String} $replace ('') - New value\n//\n// @access private\n//\n// @return {String} - Updated string\n//\n// @author Hugo Giraudel\n// @link http://bit.ly/1Khge01\n//\n@function _gel-str-replace($string, $search, $replace: '') {\n    $index: str-index($string, $search);\n\n    @if $index {\n        @return str-slice($string, 1, $index - 1) + $replace + _gel-str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n    }\n\n    @return $string;\n}\n\n\n// Combine the the value of two Sass maps\n//\n// @param {Map} $source - The orignal Sass map\n// @param {Map} $map - Sass map containing the new values to be combined\n//\n// @access private\n//\n// @return {Map} - New map consistenting of the values of both supplied maps\n//\n// @author Hugo Giraudel\n// @link http://bit.ly/1PPIoj4\n//\n@function _gel-map-combine($source, $map) {\n    @each $key, $value in $map {\n        $new: ($key: $value);\n\n        @if map-has-key($source, $key) {\n            $current: map-get($source, $key);\n            $new: ($key: map-merge($current, $value));\n        }\n\n        $source: map-merge($source, $new);\n    }\n\n    @return $source;\n}\n\n\n// Return the type settings for the requested type class/type group. If a bold variant is\n// requested the bold type values will be combined with the type values of the non-bold\n// variant.\n//\n// @param {String} $type-class - name of the type class you want the settings for (e.g. pica)\n// @param {String} $type-group (all) - which type group you want the values for (e.g. group-a)\n//\n// @returns {Map} - a map of the type settings for the requested type class/type group\n//\n// @author Shaun Bent\n// @author Adam Bulmer\n//\n@function gel-typography($type-class, $type-group: 'all') {\n    $type-settings: map-get($gel-type-settings, $type-class);\n\n    @if (str-index($type-class, '-bold')) {\n        $root-type-group: map-get($gel-type-settings, _gel-str-replace($type-class, '-bold'));\n        $type-settings: _gel-map-combine($root-type-group, $type-settings);\n    }\n\n    @if ($type-group != 'all') {\n        @return map-get($type-settings, $type-group);\n    }\n\n    @return $type-settings;\n}\n\n\n// Output the type values for the requested type class (e.g pica). This will return all required media\n// queries and no-touch fallbacks\n//\n// @param {String} $type-class - name of the type class to output the values for\n//\n// @author Shaun Bent\n// @author Adam Bulmer\n//\n@mixin gel-typography($type-class) {\n    @if $core {\n      @include _gel-output-type-values(gel-typography($type-class, 'group-a'));\n    }\n\n    @if $enhanced {\n        @include mq($from: gel-bp-type-b) {\n            @include _gel-output-type-values(gel-typography($type-class, 'group-b'));\n        }\n\n        @include mq($from: gel-bp-type-c) {\n            @include _gel-output-type-values(gel-typography($type-class, 'group-c'));\n\n            .#{$gel-type-touch-class} & {\n                @include _gel-output-type-values(gel-typography($type-class, $gel-type-no-touch-group));\n            }\n        }\n    }\n}\n\n\n// Loop through a supplied Sass map and return each key/value as CSS properties\n// and values. Any `px` value will be automatically passed to the `rem` tool\n//\n// @param {Map} $type-values - a map of CSS values in property: value format\n//\n// @access private\n//\n// @author Shaun Bent\n// @author Adam Bulmer\n//\n@mixin _gel-output-type-values($type-values) {\n    @each $property, $value in $type-values {\n        @if (type-of($value) == number and unit($value) == 'px') {\n            @include rem($property, $value);\n        } @else {\n            #{$property}: $value;\n        }\n    }\n}\n","&-episode-suggestions {\n  @include gel-layout-item;\n  @include rem(\"padding-bottom\", (2 * $gel-spacing-unit));\n\n  .se-suggestions-container__title {\n    margin: 0;\n    border-bottom: 1px solid $suggestion-border-colour;\n    color: $suggestion-heading-colour;\n    font-weight: normal;\n\n    @include gel-typography(\"pica\");\n    @include rem(\"padding\", 0 0 $gel-spacing-unit $gel-spacing-unit);\n\n    @include rem(\"margin-bottom\", 8px);\n  }\n\n  @include from-bq-s {\n    .se-suggestions-container__title {\n      @include rem(\"padding-top\", 4px);\n      @include rem(\"padding-left\", double($gel-spacing-unit));\n    }\n  }\n\n  @include from-bq-m {\n    @include gel-layout-item($width: 7 / 12);\n\n    .se-suggestions-container__title {\n      @include rem(\"padding-top\", 12px);\n      @include rem(\"padding-left\", $gel-spacing-unit);\n      margin: 0;\n    }\n  }\n\n  @include from-bq-xxl {\n    @include gel-layout-item($width: 12 / 24);\n  }\n}\n","&-episode-suggestion {\n  text-decoration: none;\n  display: block;\n  position: relative;\n  overflow-y: auto;\n\n  @include rem(\"padding-top\", (1.5 * $gel-spacing-unit));\n  @include rem(\"padding-bottom\", (1.5 * $gel-spacing-unit));\n  @include rem(\"padding-left\", $gel-spacing-unit);\n  padding-right: 0;\n\n  a {\n    position: relative;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    display: block;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n\n  &__title {\n    margin: 0;\n    padding: 0;\n    @include gel-typography(\"pica\");\n    margin-bottom: -1px;\n    color: $episode-suggestion-heading-colour;\n    font-weight: bold;\n  }\n\n  &__subtitle {\n    margin: 0;\n    padding: 0;\n    @include gel-typography(\"long-primer\");\n    color: $episode-suggestion-subheading-colour;\n  }\n\n  &-icon {\n    position: absolute;\n    top: $gel-spacing-unit;\n    bottom: auto;\n    left: 0;\n    width: $se-icon-size;\n    height: $se-icon-size;\n  }\n\n  @include from-bq-s {\n    @include rem(\"padding-top\", $gel-spacing-unit);\n    @include rem(\"padding-bottom\", $gel-spacing-unit);\n    @include rem(\"padding-left\", double($gel-spacing-unit));\n\n    &:first-of-type {\n      @include rem(\"padding-top\", $gel-spacing-unit);\n      margin-top: 0;\n    }\n\n    &-icon {\n      @include rem('left', double($gel-spacing-unit));\n      bottom: 0;\n      top: auto;\n    }\n  }\n\n  @include from-bq-m {\n    @include rem(\"padding-left\", $gel-spacing-unit);\n    margin-top: 0;\n  }\n}\n\n&-icon {\n  &__video {\n    background: transparent url(\"../img/gel-icon-iplayer.svg\") no-repeat scroll 0 0;\n    background-size: 16px;\n    background-position: center center;\n    color: $episode-image-black;\n  }\n\n  &__audio {\n    width: $se-icon-size + 6px;\n    background: transparent url(\"../img/gel-icon-audio-cta-black.svg\") no-repeat scroll 0 0;\n    background-size: 20px;\n    background-position: center center;\n    color: $episode-image-black;\n  }\n\n  @include from-bq-s {\n    &__video,\n    &__audio {\n      background-color: $episode-image-white;\n    }\n  }\n}\n\n&-episode-panel {\n  margin-left: -16px;\n  position: relative;\n}\n\n&-episode-details {\n  float: left;\n  margin-left: $se-icon-size;\n  @include rem(\"padding-left\", double($gel-spacing-unit));\n\n  @include from-bq-s {\n    width: 75%;\n    margin-left: 0;\n  }\n\n  @include from-bq-m {\n    width: 71.43%;\n  }\n\n  @include from-bq-xxl {\n    width: 76.92%;\n  }\n}\n","&-episode-image {\n  display: none; // below 600px : no image\n  float: left;\n  position: relative;\n\n  &__bg {\n    background: $placeholder-img-bg;\n    height: 0;\n    padding-bottom: 56.25%; // 16:9 ratio\n\n    picture,\n    img {\n      max-width: 100%;\n      height: auto;\n      border: none;\n    }\n  }\n\n  @include from-bq-s {\n    display: block;\n    width: 25%; // 3/12 cols = 25%\n    @include rem('padding-left', (2 * $gel-spacing-unit));\n  }\n\n  @include from-bq-m {\n    @include rem('padding-left', (2 * $gel-spacing-unit));\n    width: 28.57%; // 2/7 cols = 28.57%\n  }\n\n  @include from-bq-xxl {\n    width: 23.08%; // 3/13 cols = 23.08%\n  }\n}\n",".se-btn-view-all-wrapper {\n  @include gel-layout-item;\n\n  @include from-bq-xxl {\n    @include gel-layout-item($width: 20 / 24);\n    margin-left: $col-4_24;\n  }\n}\n\n.se-btn-view-all {\n  cursor: pointer;\n  border: none;\n  border-radius: 0;\n  background-color: $view-all-results-btn-bg;\n  @include transition(background-color, 0.4s ease);\n  color: $view-all-results-btn-color;\n  @include rem(\"height\", $view-all-results-btn-height);\n  @include rem(\"margin-bottom\", (3 * $gel-spacing-unit));\n  @include gel-typography(\"brevier\");\n  @include rem(\"padding-left\", (2 * $gel-spacing-unit));\n  @include rem(\"padding-right\", (2 * $gel-spacing-unit));\n  font-weight: bold;\n\n  @include rem(\"margin-left\", $gel-spacing-unit);\n\n  @include from-bq-s {\n    @include rem(\"margin-left\", (2 * $gel-spacing-unit));\n  }\n\n  &:hover {\n    background-color: $view-all-results-btn-bg--hover;\n  }\n\n  &:focus {\n    background-color: $view-all-results-btn-bg--hover;\n  }\n}\n","// Need to specify A element to override orb CSS rules\n// Also see blame/_orbit.css\n.se-searchbox-app {\n  a.se-search-suggestion,\n  .se-searchbox-message {\n    @include gel-typography(\"pica\");\n    @include rem(\"padding\", $suggestion-padding);\n    color: $suggestion-text-colour;\n    display: block;\n    text-decoration: none;\n    word-wrap: break-word;\n\n    @include from-bq-s {\n      @include rem(\"padding\", 10px $gel-spacing-unit 10px);\n      @include rem(\"padding-left\", (2 * $gel-spacing-unit));\n      @include rem(\"padding-right\", (2 * $gel-spacing-unit));\n    }\n\n    &:focus {\n      background-color: $suggestion-highlight-bg-colour;\n      color: $suggestion-highlight-text-colour;\n      outline: 0;\n    }\n\n    mark,\n    em,\n    strong {\n      font-style: normal;\n      background-color: transparent;\n      color: inherit;\n      font-weight: bold;\n    }\n  }\n\n  .se-searchbox-message {\n    margin: 0;\n  }\n}\n\n.se-no-touch .se-searchbox-app a.se-search-suggestion:hover {\n  background-color: $suggestion-highlight-bg-colour;\n  color: $suggestion-highlight-text-colour;\n}\n","// Sass does not want to play nicely with nesting the title, subtitle in the parent:hover\n// scss-lint:disable MergeableSelector\n.se-no-touch .se-episode-suggestion:hover,\n.se-no-touch .se-episode-suggestion:focus {\n  background-color: $suggestion-highlight-bg-colour;\n  outline: 0;\n\n  .se-episode-suggestion__title {\n    color: $suggestion-highlight-text-colour;\n  }\n}\n\n// See /themes/iplayer for iplayer and radio themes\n","// scss-lint:disable SelectorDepth\n.se-iplayer-theme,\n.se-iplayer-radio-theme {\n\n  // With the express permission of the Navigation team, we override the drawer\n  // border colour and background colour, to fall accommmodate iPlayer drawer theme,\n  // until such time as drawer theming has been reviewed.\n  .orb-nav-pri.orb-nav-active {\n    border-bottom-color: $drawer-border-color--iplayer;\n\n    .orb-panel-active.se-panel-active {\n      background-color: $drawer-bg-color--iplayer;\n    }\n  }\n\n  .se-suggestions-container,\n  .se-searchbox-panel,\n  .se-searchbox__clear {\n    background-color: $searchbox-bg-iplayer;\n  }\n\n  .se-episode-suggestion__title {\n    color: $episode-suggestion-heading-colour-iplayer;\n  }\n\n  .se-searchbox-app {\n    a.se-search-suggestion,\n    .se-searchbox-message {\n      color: $suggestion-text-colour-iplayer;\n    }\n  }\n}\n\n\n.se-iplayer-theme .se-searchbox-app a.se-search-suggestion:focus,\n.se-iplayer-theme .se-searchbox-app a.se-search-suggestion:hover,\n.se-iplayer-radio-theme .se-searchbox-app a.se-search-suggestion:hover,\n.se-iplayer-radio-theme .se-searchbox-app a.se-search-suggestion:focus {\n  background-color: transparent;\n  color: $suggestion-highlight-text-colour-iplayer;\n}\n\n//IPLAYER tv\n.se-iplayer-theme {\n  .se-searchbox-message {\n    display: none;\n  }\n\n  .se-no-search-suggestions {\n    display: none;\n  }\n\n  .se-search-suggestions {\n    @include rem(\"padding-bottom\", (1.75 * $gel-spacing-unit));\n  }\n}\n\n// IPLAYER RADIO\n.se-iplayer-radio-theme {\n  .se-searchbox {\n    &__submit {\n      background: $searchbox--input-bg url(\"../img/gel-icon-search-pink.svg\") no-repeat scroll 0 0;\n      background-size: $searchbox-icon-size;\n      @include rem(\"background-position\", center);\n    }\n  }\n\n  .se-episode-suggestions,\n  .se-search-suggestions {\n    .se-suggestions-container__title {\n      border-bottom: 1px solid $suggestion-border-colour-iplayer-radio;\n      color: $suggestion-heading-colour-iplayer-radio;\n  }\n }\n\n  .se-episode-suggestion__subtitle {\n    color: $episode-suggestion-subheading-colour--iplayer-radio;\n  }\n\n  .se-icon {\n    &__audio {\n      background: transparent url(\"../img/gel-icon-iplayer-radio-white.svg\") no-repeat scroll;\n      background-size: 20px;\n      background-position: center center;\n    }\n  }\n\n  @include from-bq-s {\n    .se-icon__audio {\n      background: $episode-image-iplayer-pink url(\"../img/gel-icon-iplayer-radio-white.svg\") no-repeat scroll;\n      background-size: 20px;\n      background-position: center center;\n    }\n  }\n}\n\n// NO TOUCH\n.se-iplayer-theme.se-no-touch a.se-search-suggestion:hover,\n.se-iplayer-theme.se-no-touch a.se-search-suggestion:focus {\n  color: $suggestion-highlight-text-colour-iplayer;\n  background-color: inherit;\n}\n\n.se-iplayer-theme.se-no-touch .se-episode-suggestion:hover,\n.se-iplayer-radio-theme.se-no-touch .se-episode-suggestion:hover,\n.se-iplayer-theme.se-no-touch .se-episode-suggestion:focus,\n.se-iplayer-radio-theme.se-no-touch .se-episode-suggestion:focus {\n  background-color: $suggestion-highlight-bg-colour-iplayer;\n\n  .se-episode-suggestion__title {\n    color: $suggestion-highlight-text-colour-iplayer;\n  }\n}\n","// scss-lint:disable SelectorDepth, NestingDepth\n.se-sounds-theme {\n  // chnage the colour of the overall container\n  .se-suggestions-container,\n  .se-searchbox-panel,\n  .se-searchbox__clear {\n      background-color: $searchbox-bg-sounds;\n  }\n\n  // icon themes\n  .se-searchbox__submit {\n      background: $searchbox--input-bg url(\"../img/gel-icon-search-orange.svg\") no-repeat scroll 0 0;\n      background-size: $searchbox-icon-size;\n      @include rem(\"background-position\", center);\n  }\n\n  // change the \"suggestions\" and \"latest result\" title colours\n  .se-episode-suggestions,\n  .se-search-suggestions {\n      .se-suggestions-container__title {\n      border-bottom: 1px solid $suggestion-border-colour-sounds;\n      color: $suggestion-heading-colour-sounds;\n      }\n  }\n\n  // style search suggestions\n  a.se-search-suggestion,\n  .se-searchbox-message {\n      color: $suggestion-text-colour-sounds;\n  }\n\n  .se-searchbox-app a.se-search-suggestion:focus,\n  .se-searchbox-app a.se-search-suggestion:hover {\n      background-color: transparent;\n      color: $suggestion-highlight-text-colour-sounds;\n  }\n\n  // style episode suggestions\n  a.se-episode-suggestion {\n      background-color: transparent;\n\n      &:hover {\n      background-color: $episode-suggestion-bg-colour-hover-sounds;\n      }\n  }\n\n  .se-episode-suggestion {\n      &__title {\n      color: $episode-suggestion-heading-colour-sounds;\n      }\n\n      &__subtitle {\n      color: $episode-suggestion-subheading-colour-sounds;\n      }\n\n      .se-icon__audio {\n      background: transparent url(\"../img/gel-icon-sounds-white.svg\") no-repeat scroll;\n      background-size: 15px;\n      background-position: center center;\n      }\n\n      &:hover,\n      &:focus {\n      .se-episode-suggestion__title {\n          color: $suggestion-highlight-text-colour-sounds;\n      }\n      }\n  }\n\n  @include from-bq-s {\n      .se-episode-suggestion .se-icon__audio {\n      background: $episode-image-sounds url(\"../img/gel-icon-sounds-white.svg\") no-repeat scroll;\n      background-size: 18px;\n      background-position: center center;\n      }\n  }\n}"]}