var vp_container = document.querySelector(".vp-container");
var player = document.querySelector(".player");
var play = document.querySelector(".play");
var video = document.getElementById("quickplayer");
var vp_controls = document.querySelector(".vp-controls");
var vp_preview = document.querySelector(".vp-preview");
var vp_outro_wrapper = document.querySelector(".vp-outro-wrapper");
var vp_spin = document.querySelector(".vp-spin");
var vp_menu = document.querySelector('div[role="menu"]');
var captions = document.querySelector('div[role="menucaptions"]');
var toggLe = document.querySelector(".toggle");
var vp_prefs = document.querySelector(".vp-prefs");
var vp_quality = document.querySelector(".vp--quality");
var vp_speed = document.querySelector(".vp--speed");
var full_screen = document.querySelector(".fullscreenvideo");
var timeTotal = document.querySelector(".timecode");
var timeCode = document.getElementById("timeCode");
var focus_target = document.querySelector(".focus-target");
var progressPlayed = document.getElementById("progressPlayed");
var progresLoader = document.getElementById("progresLoader");
var progressLoadedMinibar = document.getElementById("progressLoadedMinibar");
var progressPlayedMinibar = document.getElementById("progressPlayedMinibar");
var progressBufferMinibar = document.getElementById("progressBufferMinibar");
var vp_left_zone = document.querySelector(".vp-left-zone");
var vp_right_zone = document.querySelector(".vp-right-zone");
var pipButton = document.querySelector(".pip");

function makeLandscape() {
  if(screen.orientation && screen.orientation.lock) {
    screen.orientation.lock('landscape');
  }
  else {
    screen.orientation.unlock();
  }
}

function landscape() {
  window.screen.orientation.lock("portrait").then(success => makeLandscape(), failure => console.log(failure))
}
this.openFullscreen = function() {
  vp_container.classList.add("vp-center");
  player.classList.add("only-in-fullscreen");
  player.style.maxWidth = "calc(177.778vh)";
  player.style.height = "calc(56.25vw)";
  if(player.requestFullScreen) {
    player.requestFullScreen();
  }
  else if(player.mozRequestFullScreen) {
    player.mozRequestFullScreen();
  }
  else if(player.webkitRequestFullScreen) {
    player.webkitRequestFullScreen();
  }
  this.fullscreen = true;
  landscape();
};
this.closeFullscreen = function() {
  vp_container.classList.remove("vp-center");
  player.classList.remove("only-in-fullscreen");
  player.style.maxWidth = "";
  player.style.height = "";
  if(document.cancelFullScreen) {
    document.cancelFullScreen();
  }
  else if(document.mozCancelFullScreen) {
    document.mozCancelFullScreen();
  }
  else if(document.webkitCancelFullScreen) {
    document.webkitCancelFullScreen();
  }
  this.fullscreen = false;
};
var toggleFullscreen = function(event) {
  event.preventDefault();
  if(!this.fullscreen) {
    this.openFullscreen();
  }
  else {
    this.closeFullscreen();
  }
  return false;
}.bind(this);

function loadStart() {
  vp_spin.classList.remove("vp-spin-invisible");
  progressBufferMinibar.classList.remove("hidden");
}

function canPlay() {
  vp_spin.classList.add("vp-spin-invisible");
  progressBufferMinibar.classList.add("hidden");
}

function videoplay() {
  vp_preview.classList.add("vp-preview-invisible");
  vp_controls.classList.remove("controls-outro");
  player.classList.remove("player-outroVisible");
  if(video.paused) {
    vp_outro_wrapper.classList.remove("in");
    play.classList.remove("state-paused");
    play.classList.add("state-playing");
    video.play();
  }
  else {
    play.classList.remove("state-playing");
    play.classList.add("state-paused");
    video.pause();
  }
}

function videoended() {
  vp_outro_wrapper.classList.add("in");
  vp_preview.classList.add("vp-preview-invisible");
  play.classList.remove("state-playing");
  play.classList.add("state-paused");
  vp_controls.classList.add("controls-outro");
  player.classList.add("player-outroVisible");
  progresLoader.style.width = "0%";
  progressPlayed.style.width = "0%";
  progressPlayedMinibar.style.width = "0%";
  progressLoadedMinibar.style.width = "0%";
  focus_target.ariaValueText = ("00:00" + " of " + `${neatTime(video.duration)}`);
  timeCode.innerHTML = `${neatTime(video.duration)}`;
  timeTotal.style.left = "0%";
  timeTotal.style.display = "block";
}

function openCaptions() {
  if(toggLe.attributes["aria-haspopup"].value == "false") {
    captions.classList.remove("vp-menu-invisible");
    captions.classList.remove("vp-menu-hidden");
    toggLe.ariaHasPopup = "true";
  }
  else {
    captions.classList.add("vp-menu-invisible");
    captions.classList.add("vp-menu-hidden");
    toggLe.ariaHasPopup = "false";
  }
}

function rewind() {
  vid_currentTime = video.currentTime;
  video.currentTime = vid_currentTime - 5;
}

function fastforward() {
  vid_currentTime = video.currentTime;
  video.currentTime = vid_currentTime + 5;
}

function openMenu() {
  if(vp_prefs.attributes["aria-haspopup"].value == "false") {
    vp_menu.classList.remove("vp-menu-invisible");
    vp_menu.classList.remove("vp-menu-hidden");
    vp_quality.classList.remove("vp-panel-open");
    vp_speed.classList.remove("vp-panel-open");
    vp_prefs.ariaHasPopup = "true";
  }
  else {
    vp_menu.classList.add("vp-menu-invisible");
    vp_menu.classList.add("vp-menu-hidden");
    vp_quality.classList.remove("vp-panel-open");
    vp_speed.classList.remove("vp-panel-open");
    vp_prefs.ariaHasPopup = "false";
  }
}

function vpQuality() {
  if(vp_quality.attributes["aria-hidden"].value == "true") {
    vp_quality.classList.add("vp-panel-open");
    vp_quality.ariaHidden = "false";
  }
  else {
    vp_quality.classList.remove("vp-panel-open");
    vp_quality.ariaHidden = "true";
  }
}

function vpSpeed() {
  if(vp_speed.attributes["aria-hidden"].value == "true") {
    vp_speed.classList.add("vp-panel-open");
    vp_speed.ariaHidden = "false";
  }
  else {
    vp_speed.classList.remove("vp-panel-open");
    vp_speed.ariaHidden = "true";
  }
}

function neatTime(time) {
  var hours = Math.floor((time % 86400) / 3600);
  var minutes = Math.floor((time % 3600) / 60);
  var seconds = Math.floor(time % 60);
  seconds = seconds > 9 ? seconds : `0${seconds}`;
  return `0${minutes}:${seconds}`;
}

function beginProgress(e) {
  timeCode.innerHTML = `${neatTime(video.duration)}`;
  timeTotal.style.left = "0%";
  timeTotal.style.display = "block";
  focus_target.ariaValueMax = video.duration;
  focus_target.ariaValueText = ("00:00" + " of " + `${neatTime(video.duration)}`);
  progresLoader.style.width = `${(video.buffered.end(0) / video.duration) * 100}%`;
  progressLoadedMinibar.style.width = `${(video.buffered.end(0) / video.duration) * 100}%`;
}

function updateProgress(e) {
  timeCode.innerHTML = `${neatTime(video.currentTime)}`;
  timeTotal.style.left = (video.currentTime / video.duration) * 100 + "%";
  focus_target.setAttribute("aria-valuenow", video.currentTime);
  focus_target.ariaValueText = (`${neatTime(video.currentTime)}` + " of " + `${neatTime(video.duration)}`);
  progressPlayed.style.width = (video.currentTime / video.duration) * 100 + "%";
  progressPlayedMinibar.style.width = (video.currentTime / video.duration) * 100 + "%";
}

if ("pictureInPictureEnabled" in document) {
  pipButton.classList.remove("hidden");
  pipButton.hidden = false;
  pipButton.addEventListener("click", () => {
    if (document.pictureInPictureElement) {
      pipButton.classList.remove("return");
      pipButton.classList.add("enter");
      pipButton.title = "Enter Picture-in-Picture";
      document.exitPictureInPicture().catch((error) => {
      });
    } else {
      pipButton.title = "Exit Picture-in-Picture";
      pipButton.classList.remove("enter");
      pipButton.classList.add("return");
      video.requestPictureInPicture().catch((error) => {
      });
    }
  });
}

play.addEventListener("click", videoplay, false);
video.addEventListener("click", videoplay, false);
video.addEventListener("ended", videoended, false);
video.addEventListener("loadstart", loadStart, false);
video.addEventListener("waiting", loadStart, false);
video.addEventListener("canplay", canPlay, false);
vp_prefs.addEventListener("click", openMenu, false);
toggLe.addEventListener("click", openCaptions, false);
vp_quality.addEventListener("click", vpQuality, false);
vp_speed.addEventListener("click", vpSpeed, false);
full_screen.addEventListener("click", toggleFullscreen, false);
video.addEventListener("canplay", beginProgress, false);
video.addEventListener("timeupdate", updateProgress, false);
vp_left_zone.addEventListener("click", rewind, false);
vp_right_zone.addEventListener("click", fastforward, false);
                           

document.onkeydown = function(event) {
  switch(event.keyCode) {
    case 37:
      event.preventDefault();
      vid_currentTime = video.currentTime;
      video.currentTime = vid_currentTime - 5;
      break;
    case 39:
      event.preventDefault();
      vid_currentTime = video.currentTime;
      video.currentTime = vid_currentTime + 5;
      break;
    case 32:
      event.preventDefault();
      videoplay();
      break;
    case 38:
      event.preventDefault();
      video_vol = video.volume;
      if(video_vol != 1) {
        try {
          video.volume = video_vol + 0.02;
        }
        catch (err) {
          video.volume = 1;
        }
      }
      break;
    case 40:
      event.preventDefault();
      video_vol = video.volume;
      if(video_vol != 0) {
        try {
          video.volume = video_vol - 0.02;
        }
        catch (err) {
          video.volume = 0;
        }
      }
      break;
  }
};



var video, transcriptDiv;
var tracks, trackElems, tracksURLs = [];
var buttonEnglish, buttonFran√ßais;
window.onload = function() {
  console.log("init");
  video = document.querySelector("#quickplayer");
  transcriptDiv = document.querySelector(".transcript");
  trackElems = document.querySelectorAll("track");
  for(var i = 0; i < trackElems.length; i++) {
    var currentTrackElem = trackElems[i];
    tracksURLs[i] = currentTrackElem.src;
  }
  buttonEnglish = document.querySelector("#buttonEnglish");
  buttonFran√ßais = document.querySelector("#buttonFran√ßais");
  buttonEnglish.disabled = false;
  buttonFran√ßais.disabled = false;
  tracks = video.textTracks;
};

function loadTranscript(lang) {
  clearTranscriptDiv();
  disableAllTracks();
  for(var i = 0; i < tracks.length; i++) {
    var track = tracks[i];
    var trackAsHtmlElem = trackElems[i];
    if((track.language === lang) && (track.kind !== "chapters")) {
      track.mode = "showing";
      if(trackAsHtmlElem.readyState === 2) {
        displayCues(track);
      }
      else {
        displayCuesAfterTrackLoaded(trackAsHtmlElem, track);
      }
    }
  }
}

function displayCuesAfterTrackLoaded(trackElem, track) {
  trackElem.addEventListener('load', function(e) {
    console.log("track loaded");
    displayCues(track);
  });
}

function disableAllTracks() {
  for(var i = 0; i < tracks.length; i++) tracks[i].mode = "disabled";
}

function displayCues(track) {
  var cues = track.cues;
  for(var i = 0, len = cues.length; i < len; i++) {
    var cue = cues[i];
    addCueListeners(cue);
    var voices = getVoices(cue.text);
    var transText = "";
    if(voices.length > 0) {
      for(var j = 0; j < voices.length; j++) {
        transText += voices[j].voice + ': ' + removeHTML(voices[j].text);
      }
    }
    else transText = cue.text;
    var clickableTransText = "<div class='cues' id=" + cue.id + " onclick='jumpTo(" + cue.startTime + ");'" + ">" + transText + "</div>";
    addToTranscriptDiv(clickableTransText);
  }
}

function getVoices(speech) {
  var voices = [];
  var pos = speech.indexOf('<v');
  while(pos != -1) {
    endVoice = speech.indexOf('>');
    var voice = speech.substring(pos + 2, endVoice).trim();
    var endSpeech = speech.indexOf('</v>');
    var text = speech.substring(endVoice + 1, endSpeech);
    voices.push({
      'voice': voice,
      'text': text
    });
    speech = speech.substring(endSpeech + 4);
    pos = speech.indexOf('<v');
  }
  return voices;
}

function removeHTML(text) {
  var div = document.createElement('div');
  div.innerHTML = text;
  return div.textContent || div.innerText || '';
}

function jumpTo(time) {
  video.currentTime = time;
  video.play();
}

function clearTranscriptDiv() {
  transcriptDiv.innerHTML = "";
}

function addToTranscriptDiv(htmlText) {
  transcriptDiv.innerHTML += htmlText;
}

function addCueListeners(cue) {
  cue.onenter = function() {
    console.log('enter id=' + this.id);
    var transcriptText = document.getElementById(this.id);
    transcriptText.classList.add("current");
  };
  cue.onexit = function() {
    console.log('exit id=' + cue.id);
    var transcriptText = document.getElementById(this.id);
    transcriptText.classList.remove("current");
  };
}

var buttonEnglish = document.querySelector("#buttonEnglish");


for(var i = 0; i < document.getElementsByClassName("vp-panel-item").length; i++) {
  var d = document.getElementsByClassName("vp-panel-item")[i];
  d.onclick = function(e) {
    if((d.ariaChecked = "false")) {
      d.ariaChecked = "true";
      d.classList.add("vp-panel-item-on");
    } else {
      d.ariaChecked = "false";
      d.classList.remove("vp-panel-item-on");
    }
  }
}



function addEnglishCC() {
  buttonEnglish.classList.add("vp-panel-item-on");
  toggLe.classList.remove("off");
  toggLe.classList.add("on");
}
